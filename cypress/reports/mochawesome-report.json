{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-15T17:59:51.192Z",
    "end": "2024-09-15T17:59:52.055Z",
    "duration": 863,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2d4281b4-382e-491a-9e02-d30fd946444e",
      "title": "",
      "fullFile": "cypress\\e2e\\api-tests\\student.cy.js",
      "file": "cypress\\e2e\\api-tests\\student.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
          "title": "Student API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Student - Validate Status Code",
              "fullTitle": "Student API Tests Get Student - Validate Status Code",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "studentAPI.getStudents().then(response => {\n  expect(response.status).to.eq(200);\n  cy.allure().step(\"Checked Status Code 200\");\n});",
              "err": {},
              "uuid": "a2c4245e-d484-4c91-adb5-bba54ace9e67",
              "parentUUID": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Student - Validate Response Length",
              "fullTitle": "Student API Tests Get Student - Validate Response Length",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "studentAPI.getStudents().then(response => {\n  expect(response.body.length).to.be.greaterThan(0);\n  cy.allure().step(\"Validated the length of response\");\n});",
              "err": {},
              "uuid": "6ae391d2-6738-430e-a2d2-6ce542196fe6",
              "parentUUID": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Student - Validate Status Code and Store ID",
              "fullTitle": "Student API Tests Create Student - Validate Status Code and Store ID",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const student = {\n  first_name: \"John\",\n  middle_name: \"Doe\",\n  last_name: \"Smith\",\n  date_of_birth: \"1995-12-23\"\n};\nstudentAPI.createStudent(student).then(response => {\n  expect(response.status).to.eq(201);\n  studentId = response.body.id; // Store studentId from the response\n  console.log(\"student created with ID:\", studentId); // Confirm the ID is stored\n  cy.allure().step(\"Created a new student and checked status code 201\");\n});",
              "err": {},
              "uuid": "f607adc4-8467-4a4a-aa6d-8059b3d0c7b8",
              "parentUUID": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Specific Student - Validate Field Values",
              "fullTitle": "Student API Tests Get Specific Student - Validate Field Values",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Use the stored studentId from the previous test\ncy.wrap(studentId).should(\"exist\").then(id => {\n  // Ensure studentId is available\n  studentAPI.getSpecificStudent(id).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body.data).to.have.property(\"id\", id);\n    expect(response.body.data).to.have.property(\"first_name\", \"John\");\n    expect(response.body.data).to.have.property(\"middle_name\", \"Doe\");\n    expect(response.body.data).to.have.property(\"last_name\", \"Smith\");\n    expect(response.body.data).to.have.property(\"date_of_birth\", \"1995-12-23\");\n    cy.allure().step(\"Validated specific student field values\");\n  });\n});",
              "err": {},
              "uuid": "91e1ebef-1cd9-4471-b984-fdec440da967",
              "parentUUID": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Technical Skills - Validate Status Code",
              "fullTitle": "Student API Tests Create Technical Skills - Validate Status Code",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Use the stored studentId when creating technical skills\ncy.wrap(studentId).should(\"exist\").then(id => {\n  // Ensure studentId is available\n  const skills = {\n    id: 1,\n    language: [\"JavaScript\", \"Python\"],\n    yearexp: \"2\",\n    lastused: \"2023\",\n    st_id: id // Use stored studentId\n  };\n  studentAPI.createTechnicalSkills(skills).then(response => {\n    expect(response.status).to.eq(200);\n    cy.allure().step(\"Created technical skills and checked status code 200\");\n  });\n});",
              "err": {},
              "uuid": "b4bd297c-1a00-410a-9b6f-dea1bb445b3f",
              "parentUUID": "f29d062f-9d5a-469d-bdfa-fcc6930dee05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2c4245e-d484-4c91-adb5-bba54ace9e67",
            "6ae391d2-6738-430e-a2d2-6ce542196fe6",
            "f607adc4-8467-4a4a-aa6d-8059b3d0c7b8",
            "91e1ebef-1cd9-4471-b984-fdec440da967",
            "b4bd297c-1a00-410a-9b6f-dea1bb445b3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "reportFilename": "mochawesome-report"
      },
      "version": "6.2.0"
    }
  }
}